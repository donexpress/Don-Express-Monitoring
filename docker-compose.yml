version: "3"

networks:
  monitoring:
    external:
      name: monitoring

services:
  prometheus:
    build:
      context: .
      dockerfile: prometheus/Dockerfile
      args: 
        dc0_nginx_logs_port: 4040
        stg_nginx_logs_port: 4040
        prod_nginx_logs_port: 4040
        dc0_cluster_ip: $DC0_CLUSTER_IP
        stg_cluster_ip: $STG_CLUSTER_IP
        prod_cluster_ip: $PROD_CLUSTER_IP
    container_name: donex_prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    networks:
      - monitoring
    restart: always

  prometheusexporter:
    image: nginx/nginx-prometheus-exporter:0.8.0
    ports:
    - "9113:9113"
    entrypoint:
    - /usr/bin/exporter
    - -nginx.scrape-uri
    - "http://${PROXY_IP}:${PROXY_PORT}/metrics"
    container_name: donex_nginx_prometheus

  nodeexporter:
    image: prom/node-exporter:v0.18.1
    container_name: donex_nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100
    networks:
      - monitoring
    restart: always

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: donex_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitoring
    restart: always
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:7.3.4
    container_name: donex_grafana
    depends_on:
      - prometheus
    container_name: donex_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
      # - ./certs/fullchain.pem:/etc/ssl/fullchain.pem
      # - ./certs/privkey.pem:/etc/ssl/privkey.pem
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GRAFANA_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - monitoring
    labels:
      org.label-schema.group: "monitoring"
  
  # nginx: 
  #   build: 
  #     context: .
  #     dockerfile: nginx/Dockerfile
  #     args:
  #       prometheus_hostname: dev-prometheus.donexpress.com
  #       prometheus_ip: $CLUSTER_IP
  #       prometheus_port: 9090
  #       grafana_hostname: dev-monitoring.donexpress.com
  #       grafana_ip: $CLUSTER_IP
  #       grafana_port: 3000
  #   container_name: donex_nginx
  #   ports:
  #     - "81:80"
  #     - "444:443"
  #   restart: always

volumes: 
  grafana_data:
  prometheus_data:
